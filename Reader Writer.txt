#include<stdio.h>
#include<stdlib.h>
#include<semaphore.h>
#include<pthread.h>

sem_t r,w;
int r_count=0;

void* reader()
{
	sem_wait(&r);
		r_count++;
		if(r_count==1)
		{
			sem_wait(&w);  //jeva read karat asto teva aapn write karu shakat nahi.
		}
	sem_post(&r);
	printf("Reader is reading\n");
	sem_wait(&r);
		r_count--;
		if(r_count==0)
		{
			sem_post(&w);//defines that ki,aata read zalay so aapn write karu shkto
		}
	sem_post(&r);
	
}
void *writer()
{
	sem_wait(&w);
		printf("Writer is writing\n");
	sem_post(&w);
}
int main()
{
	pthread_t rtid[3];//used to identify and manage thread
	pthread_t wtid[3];
	
	sem_init(&r,0,1);
	sem_init(&w,0,1);
	//0 means semaphore shared among the threads in the same process
	
	for(int i=0;i<3;i++)
	{
		pthread_create(&wtid[i],NULL,writer,NULL);
		pthread_create(&rtid[i],NULL,reader,NULL);
	}
	for(int i=0;i<3;i++)
	{
	//join is wait for thread finish to its execution
		pthread_join(&wtid[i],NULL);
		pthread_join(&rtid[i],NULL);
	}
	
}